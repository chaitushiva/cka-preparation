apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "my-thanos.fullname" . }}-store
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: store
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: "0.20.0"
    app.kubernetes.io/component: thanos
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: store
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: store
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: "0.20.0"
        app.kubernetes.io/component: thanos
    spec:
      containers:
        - name: store
          image: quay.io/thanos/thanos:v0.20.0
          args:
            - "store"
            - "--tsdb.path=/data"
            - "--grpc-address=0.0.0.0:10901"
            - "--http-address=0.0.0.0:10902"
            - "--objstore.config=$(OBJSTORE_CONFIG)"
          ports:
            - name: grpc
              containerPort: 10901
              protocol: TCP
            - name: http
              containerPort: 
####
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thanos.fullname" . }}-store
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "thanos.name" . }}-store
    chart: {{ include "thanos.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.store.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "thanos.name" . }}-store
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "thanos.name" . }}-store
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ include "thanos.name" . }}-store
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - store
            - --tsdb.path=/data/
            - --objstore.config=type=s3,bucket={{ .Values.objStoreConfig.bucket }},region={{ .Values.objStoreConfig.region }},access_key={{ .Values.objStoreConfig.accessKey }},secret_key={{ .Values.objStoreConfig.secretKey }},endpoint={{ .Values.objStoreConfig.endpoint }}
            - --grpc-address=0.0.0.0:10901
          ports:
            - containerPort: 10901
              name: grpc
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "thanos.fullname" . }}-store-pvc

